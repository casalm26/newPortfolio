/* Pixel Art Design System */

/* Disable font smoothing for pixel fonts */
.font-pixel {
  -webkit-font-smoothing: none;
  -moz-osx-font-smoothing: unset;
  font-smooth: never;
  font-family: "Courier New", "Monaco", "Menlo", monospace;
}

/* Pixel perfect utilities */
.pixel-perfect {
  image-rendering: -moz-crisp-edges;
  image-rendering: -webkit-crisp-edges;
  image-rendering: pixelated;
  image-rendering: crisp-edges;
}

/* Pixel art images */
.pixel-art {
  image-rendering: -moz-crisp-edges;
  image-rendering: -webkit-crisp-edges;
  image-rendering: pixelated;
  image-rendering: crisp-edges;
  image-rendering: -webkit-optimize-contrast;
}

/* Custom pixel art animations */
@keyframes typewriter-pixel {
  from {
    width: 0;
  }
  to {
    width: 100%;
  }
}

@keyframes pixel-glow {
  0%,
  100% {
    box-shadow: 0 0 0 1px currentColor;
  }
  50% {
    box-shadow:
      0 0 0 2px currentColor,
      0 0 8px currentColor;
  }
}

@keyframes fade-in {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slide-in-from-right {
  from {
    opacity: 0;
    transform: translateX(20px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes slide-in-from-left {
  from {
    opacity: 0;
    transform: translateX(-20px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes scale-in {
  from {
    opacity: 0;
    transform: scale(0.95);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes pixel-bounce {
  0%,
  20%,
  50%,
  80%,
  100% {
    transform: translateY(0);
  }
  40% {
    transform: translateY(-4px);
  }
  60% {
    transform: translateY(-2px);
  }
}

@keyframes pixel-shake {
  0%,
  100% {
    transform: translateX(0);
  }
  10%,
  30%,
  50%,
  70%,
  90% {
    transform: translateX(-2px);
  }
  20%,
  40%,
  60%,
  80% {
    transform: translateX(2px);
  }
}

@keyframes pixel-loading {
  0% {
    opacity: 0.3;
  }
  50% {
    opacity: 1;
  }
  100% {
    opacity: 0.3;
  }
}

.animate-typewriter-pixel {
  animation: typewriter-pixel 2s steps(40) forwards;
}

.animate-pixel-glow {
  animation: pixel-glow 2s ease-in-out infinite;
}

.animate-fade-in {
  animation: fade-in 0.8s ease-out forwards;
}

.animate-slide-in-right {
  animation: slide-in-from-right 0.6s ease-out forwards;
}

.animate-slide-in-left {
  animation: slide-in-from-left 0.6s ease-out forwards;
}

.animate-scale-in {
  animation: scale-in 0.5s ease-out forwards;
}

.animate-pixel-bounce {
  animation: pixel-bounce 1s ease-in-out;
}

.animate-pixel-shake {
  animation: pixel-shake 0.5s ease-in-out;
}

.animate-pixel-loading {
  animation: pixel-loading 1.5s ease-in-out infinite;
}

/* Pixel button styles */
.btn-pixel {
  @apply font-pixel border-2 border-current;
  box-shadow: 2px 2px 0px currentColor;
  transition: all 50ms ease-out;
  position: relative;
  overflow: hidden;
}

.btn-pixel::before {
  content: "";
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    90deg,
    transparent,
    rgba(255, 255, 255, 0.1),
    transparent
  );
  transition: left 0.5s ease;
}

.btn-pixel:hover {
  box-shadow: 3px 3px 0px currentColor;
  transform: translate(-1px, -1px);
}

.btn-pixel:hover::before {
  left: 100%;
}

.btn-pixel:active {
  box-shadow: inset 1px 1px 0px rgba(0, 0, 0, 0.3);
  transform: translate(1px, 1px);
}

/* Enhanced button variants */
.btn-pixel-glow {
  @apply btn-pixel;
  animation: pixel-glow 2s ease-in-out infinite;
}

.btn-pixel-bounce:hover {
  animation: pixel-bounce 0.6s ease-in-out;
}

/* 3D Button Press Effects */
.btn-pixel-3d {
  @apply btn-pixel;
  box-shadow:
    2px 2px 0px currentColor,
    4px 4px 0px rgba(255, 255, 255, 0.1);
  transform: translateZ(0);
  transition: all 100ms ease-out;
}

.btn-pixel-3d:hover {
  box-shadow:
    3px 3px 0px currentColor,
    6px 6px 0px rgba(255, 255, 255, 0.1);
  transform: translate(-1px, -1px) translateZ(0);
}

.btn-pixel-3d:active {
  box-shadow:
    1px 1px 0px currentColor,
    inset 1px 1px 2px rgba(0, 0, 0, 0.3);
  transform: translate(1px, 1px) translateZ(0);
}

/* Isometric 3D effect */
.btn-pixel-iso {
  @apply btn-pixel;
  box-shadow:
    2px 0px 0px currentColor,
    0px 2px 0px currentColor,
    2px 2px 0px currentColor,
    4px 2px 0px rgba(255, 255, 255, 0.1),
    2px 4px 0px rgba(255, 255, 255, 0.1);
  transform: translateZ(0);
  transition: all 100ms ease-out;
}

.btn-pixel-iso:hover {
  box-shadow:
    3px 0px 0px currentColor,
    0px 3px 0px currentColor,
    3px 3px 0px currentColor,
    6px 3px 0px rgba(255, 255, 255, 0.1),
    3px 6px 0px rgba(255, 255, 255, 0.1);
  transform: translate(-1px, -1px) translateZ(0);
}

.btn-pixel-iso:active {
  box-shadow:
    1px 0px 0px currentColor,
    0px 1px 0px currentColor,
    1px 1px 0px currentColor,
    inset 1px 1px 2px rgba(0, 0, 0, 0.3);
  transform: translate(1px, 1px) translateZ(0);
}

/* Pixel card styles */
.card-pixel {
  @apply border-2 border-current;
  box-shadow: 2px 2px 0px currentColor;
  transition: all 150ms ease-out;
  position: relative;
  overflow: hidden;
}

.card-pixel::before {
  content: "";
  position: absolute;
  top: -2px;
  left: -2px;
  right: -2px;
  bottom: -2px;
  background: linear-gradient(
    45deg,
    transparent,
    rgba(255, 255, 255, 0.05),
    transparent
  );
  opacity: 0;
  transition: opacity 0.3s ease;
  pointer-events: none;
  z-index: 0;
}

.card-pixel:hover {
  box-shadow: 4px 4px 0px currentColor;
  transform: translate(-2px, -2px);
}

.card-pixel:hover::before {
  opacity: 1;
}

/* Enhanced card variants */
.card-pixel-glow {
  @apply card-pixel;
  animation: pixel-glow 3s ease-in-out infinite;
}

.card-pixel-interactive {
  @apply card-pixel;
  cursor: pointer;
}

.card-pixel-interactive:hover {
  box-shadow: 5px 5px 0px currentColor;
  transform: translate(-3px, -3px);
}

/* Grid system for pixel alignment */
.grid-pixel-8 {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(8px, 1fr));
  gap: 8px;
}

.grid-pixel-16 {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(16px, 1fr));
  gap: 16px;
}

/* Pixel-perfect borders */
.border-pixel {
  border-style: solid;
  border-width: 1px;
  border-image: none;
}

.border-pixel-2 {
  border-style: solid;
  border-width: 2px;
  border-image: none;
}

/* Pixel text shadow */
.pixel-shadow {
  text-shadow: 2px 2px 0px rgba(0, 0, 0, 0.3);
}

/* Matrix/Terminal theme colors */
.matrix-bg {
  background-color: #000000;
}

.matrix-text {
  color: #ffffff;
}

.matrix-text-muted {
  color: #808080;
}

.matrix-border {
  border-color: #808080;
}

.terminal-prompt {
  color: #a0a0a0;
}

.terminal-command {
  color: #ffffff;
}

/* Game elements */
.game-container {
  image-rendering: pixelated;
  image-rendering: -moz-crisp-edges;
  image-rendering: -webkit-crisp-edges;
}

/* Disable transitions for pixel elements when user prefers reduced motion */
@media (prefers-reduced-motion: reduce) {
  .btn-pixel,
  .card-pixel,
  .animate-typewriter-pixel,
  .animate-pixel-glow {
    animation: none;
    transition: none;
  }
}

/* Force matrix theme throughout the application */
* {
  box-sizing: border-box;
}

/* Override any colorful elements to enforce matrix theme */
.fancy-overlay,
.fancy-heading {
  background: transparent !important;
  color: inherit !important;
}

/* Ensure buttons follow matrix theme */
button:not(.pixel-button):not([class*="pixel"]) {
  background-color: transparent !important;
  color: white !important;
  border-color: #808080 !important;
}

/* Ensure all text is readable in matrix theme */
h1,
h2,
h3,
h4,
h5,
h6 {
  color: white !important;
}

p,
span,
div {
  color: white !important;
}

/* Ensure form elements follow matrix theme */
input,
textarea,
select {
  background-color: #101010 !important;
  color: white !important;
  border-color: #808080 !important;
}

/* Override any gradient backgrounds */
.bg-gradient-to-r,
.bg-gradient-to-l,
.bg-gradient-to-t,
.bg-gradient-to-b,
.bg-gradient-to-br,
.bg-gradient-to-bl,
.bg-gradient-to-tr,
.bg-gradient-to-tl {
  background: black !important;
}
